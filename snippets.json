{
    "bits": {
        "prefix": "bits",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "",
            "$1",
            "",
            "int main()",
            "{",
            "  ",
            "  ",
            "    return 0;",
            "}"
        ],
        "description": "bits"
    },
    "customIo": {
        "prefix": "customIo",
        "body": [
            "#ifndef IO_FROM_FILE",
            "    freopen(\"C:\\\\\\\\Users\\\\\\\\Dhruv\\\\\\\\OneDrive\\\\\\\\Documents\\\\\\\\CPP + DSA\\\\\\\\input.txt\", \"r\", stdin);",
            "    freopen(\"C:\\\\\\\\Users\\\\\\\\Dhruv\\\\\\\\OneDrive\\\\\\\\Documents\\\\\\\\CPP + DSA\\\\\\\\output.txt\", \"w\", stdout);",
            "#endif"
        ],
        "description": "customIo"
    },
    "cp short": {
        "prefix": "cp short",
        "body": [
            "#pragma GCC target(\"avx,avx2,fma\")",
            "#pragma GCC optimize(\"O3,unroll-loops\")",
            "#pragma GCC optimize(\"O3\")",
            "",
            "#include <bits/stdc++.h>",
            "#include <bits/stdc++.h>",
            "#include <ext/pb_ds/assoc_container.hpp>",
            "",
            "using namespace std;",
            "using namespace __gnu_pbds;",
            "",
            "#define MOD 1000000007",
            "#define MOD1 998244353",
            "#define INF 1e18",
            "#define pb push_back",
            "#define ppb pop_back",
            "#define mp make_pair",
            "#define ff first",
            "#define ss second",
            "#define PI 3.141592653589793238462",
            "#define set_bits __builtin_popcountll",
            "#define all(x) (x).begin(), (x).end()",
            "#define el \"\\n\"",
            "#define f(i, s, e) for (long long int i = s; i < e; i++)",
            "#define ef(i, s, e) for (long long int i = s; i <= e; i++)",
            "#define rf(i, e, s) for (long long int i = e - 1; i >= s; i--)",
            "",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "typedef long double lld;",
            "typedef pair<int, int> pii;",
            "typedef gp_hash_table<ll, ll> HashTable;",
            "",
            "/* PRINTS */",
            "template <class T>",
            "void print_v(vector<T> &v)",
            "{",
            "    cout << \"{\";",
            "    for (auto x : v)",
            "        cout << x << \" \";",
            "    cout << \"}\\n\";",
            "}",
            "",
            "bool prime(ll a)",
            "{",
            "    if (a == 1)",
            "        return 0;",
            "    for (int i = 2; i <= round(sqrt(a)); ++i)",
            "        if (a % i == 0)",
            "            return 0;",
            "    return 1;",
            "}",
            "void yes() { cout << \"YES\\n\"; }",
            "void no() { cout << \"NO\\n\"; }",
            "",
            "void __main__()",
            "{",
            "    int t;",
            "    cin >> t;",
            "    ll arr[200001];",
            "",
            "    while (t--)",
            "    {",
            "        ll n;",
            "        cin >> n;",
            "        for (int i = 0; i < n; i++)",
            "        {",
            "            cin >> arr[i];",
            "            $0            ",
            "        }",
            "    }",
            "}",
            "",
            "int main()",
            "{",
            "    ios_base::sync_with_stdio(false);",
            "    cin.tie(NULL);",
            "    cout.tie(NULL);",
            "    __main__();",
            "",
            "    return 0;",
            "}"
        ],
        "description": "cp short"
    },
    "print": {
        "prefix": "print",
        "body": [
            "void print(vector<int> arr)",
            "{",
            "    for (int &i : arr)",
            "        cout << i << \" \";",
            "    cout << endl;",
            "}",
            "",
            "void print(vector<vector<int>> arr)",
            "{",
            "    for (auto &j : arr)",
            "    {",
            "        for (int &i : j)",
            "            cout << i << \" \";",
            "       cout << endl;",
            "    }",
            "}"
        ],
        "description": ""
    },
    "adj4": {
        "prefix": "adj4",
        "body": [
            "int dx[4] = {0, 0, 1, -1};",
            "int dy[4] = {1, -1, 0, 0};"
        ],
        "description": ""
    },
    "cp": {
        "prefix": "cp",
        "body": [
            "#pragma GCC optimize(\"O3,unroll-loops\")",
            "#pragma GCC target(\"avx,avx2,fma\")",
            "",
            "#include <bits/stdc++.h>",
            "#include <ext/pb_ds/assoc_container.hpp>",
            "#include <ext/pb_ds/tree_policy.hpp>",
            "",
            "using namespace std;",
            "using namespace __gnu_pbds;",
            "",
            "#define MOD 1000000007",
            "#define MOD1 998244353",
            "#define INF 1e18",
            "#define pb push_back",
            "#define ppb pop_back",
            "#define mp make_pair",
            "#define ff first",
            "#define ss second",
            "#define PI 3.141592653589793238462",
            "#define set_bits __builtin_popcountll",
            "#define all(x) (x).begin(), (x).end()",
            "#define el \"\\n\"",
            "",
            "struct custom_hash",
            "{",
            "    static uint64_t splitmix64(uint64_t x)",
            "    {",
            "        x += 0x9e3779b97f4a7c15;",
            "        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;",
            "        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;",
            "        return x ^ (x >> 31);",
            "    }",
            "    size_t operator()(uint64_t x) const",
            "    {",
            "        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();",
            "        return splitmix64(x + FIXED_RANDOM);",
            "    }",
            "};",
            "",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "typedef long double lld;",
            "typedef pair<int, int> pii;",
            "typedef gp_hash_table<ll, ll, custom_hash> HashTable;",
            "typedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key",
            "",
            "// Printing Utility",
            "void _print(ll t) { cerr << t; }",
            "void _print(int t) { cerr << t; }",
            "void _print(string t) { cerr << t; }",
            "void _print(char t) { cerr << t; }",
            "void _print(lld t) { cerr << t; }",
            "void _print(double t) { cerr << t; }",
            "void _print(ull t) { cerr << t; }",
            "",
            "template <class T, class V>",
            "void _print(pair<T, V> p);",
            "template <class T>",
            "void _print(vector<T> v);",
            "template <class T>",
            "void _print(set<T> v);",
            "template <class T, class V>",
            "void _print(map<T, V> v);",
            "template <class T>",
            "void _print(multiset<T> v);",
            "template <class T, class V>",
            "void _print(pair<T, V> p)",
            "{",
            "    cerr << \"{\";",
            "    _print(p.ff);",
            "    cerr << \",\";",
            "    _print(p.ss);",
            "    cerr << \"}\";",
            "}",
            "template <class T>",
            "void _print(vector<T> v)",
            "{",
            "    cerr << \"[ \";",
            "    for (T i : v)",
            "    {",
            "        _print(i);",
            "        cerr << \" \";",
            "    }",
            "    cerr << \"]\";",
            "}",
            "template <class T>",
            "void _print(set<T> v)",
            "{",
            "    cerr << \"[ \";",
            "    for (T i : v)",
            "    {",
            "        _print(i);",
            "        cerr << \" \";",
            "    }",
            "    cerr << \"]\";",
            "}",
            "template <class T>",
            "void _print(multiset<T> v)",
            "{",
            "    cerr << \"[ \";",
            "    for (T i : v)",
            "    {",
            "        _print(i);",
            "        cerr << \" \";",
            "    }",
            "    cerr << \"]\";",
            "}",
            "template <class T, class V>",
            "void _print(map<T, V> v)",
            "{",
            "    cerr << \"[ \";",
            "    for (auto i : v)",
            "    {",
            "        _print(i);",
            "        cerr << \" \";",
            "    }",
            "    cerr << \"]\";",
            "}",
            "",
            "// modular arithmetics",
            "ll gcd(ll a, ll b)",
            "{",
            "    if (b > a)",
            "    {",
            "        return gcd(b, a);",
            "    }",
            "    if (b == 0)",
            "    {",
            "        return a;",
            "    }",
            "    return gcd(b, a % b);",
            "}",
            "",
            "ll expo(ll a, ll b, ll mod)",
            "{",
            "    ll res = 1;",
            "    while (b > 0)",
            "    {",
            "        if (b & 1)",
            "            res = (res * a) % mod;",
            "        a = (a * a) % mod;",
            "        b = b >> 1;",
            "    }",
            "    return res;",
            "}",
            "",
            "ll mminvprime(ll a, ll b) { return expo(a, b - 2, b); }",
            "bool revsort(ll a, ll b) { return a > b; }",
            "",
            "ll combination(ll n, ll r, ll m, ll *fact, ll *ifact)",
            "{",
            "    ll val1 = fact[n];",
            "    ll val2 = ifact[n - r];",
            "    ll val3 = ifact[r];",
            "    return (((val1 * val2) % m) * val3) % m;",
            "}",
            "vector<ll> sieve(int n)",
            "{",
            "    int *arr = new int[n + 1]();",
            "    vector<ll> vect;",
            "    for (int i = 2; i <= n; i++)",
            "        if (arr[i] == 0)",
            "        {",
            "            vect.push_back(i);",
            "            for (int j = 2 * i; j <= n; j += i)",
            "                arr[j] = 1;",
            "        }",
            "    return vect;",
            "}",
            "ll mod_add(ll a, ll b, ll m)",
            "{",
            "    a = a % m;",
            "    b = b % m;",
            "    return (((a + b) % m) + m) % m;",
            "}",
            "ll mod_mul(ll a, ll b, ll m)",
            "{",
            "    a = a % m;",
            "    b = b % m;",
            "    return (((a * b) % m) + m) % m;",
            "}",
            "ll mod_sub(ll a, ll b, ll m)",
            "{",
            "    a = a % m;",
            "    b = b % m;",
            "    return (((a - b) % m) + m) % m;",
            "}",
            "ll mod_div(ll a, ll b, ll m)",
            "{",
            "    a = a % m;",
            "    b = b % m;",
            "    return (mod_mul(a, mminvprime(b, m), m) + m) % m;",
            "}",
            "",
            "void __main__()",
            "{",
            "    int t;",
            "    cin >> t;",
            "",
            "    while (t--)",
            "    {",
            "        $1",
            "    }",
            "}",
            "",
            "int main()",
            "{",
            "    ios_base::sync_with_stdio(false);",
            "    cin.tie(NULL);",
            "    cout.tie(NULL);",
            "",
            "    __main__();",
            "    return 0;",
            "}"
        ],
        "description": "cp"
    }
}